@mixin button-style($font-size, $width, $bg-color, $name) {
    .btn-#{$name} {// Mixin for button styles
@mixin btn($font-size, $width, $bg-color, $name) {
  font-size: $font-size;
  width: $width;
  background-color: $bg-color;
  color: purple;
  padding: 10px;
  border-radius: 5px;
  text-align: center;
}

// Font size list
$font-sizes: 100%, 110%, 120%, 130%, 140%;

// Create button class for .btn
.btn {
  @include btn(16px, 200px, lightgreen, "default");
}

// Heading size mixin using nth() to get percentage values
@mixin heading-size($level) {
  font-size: nth($font-sizes, $level - 5);
}

// Generate headings (h6 to h10) with font sizes ranging from 100% to 140%
@for $i from 6 through 10 {
  h#{$i} {
    @include heading-size($i);
  }
}

// Create buttons with dynamic names using interpolation
@each $name in "important", "warning", "success", "info" {
  .btn-#{$name} {
    @include btn(16px, 200px, 
      if($name == "important", red, 
        if($name == "warning", yellow, 
          if($name == "success", green, blue))),
      $name);
  }
}

// Days of the week with themes
$days: (
  "Monday" : red,
  "Tuesday" : blue,
  "Wednesday" : yellow,
  "Thursday" : green,
  "Friday" : purple,
  "Saturday" : orange,
  "Sunday" : pink
);

@each $day, $color in $days {
  .day-#{$day} {
    background-color: $color;
    padding: 10px;
    border-radius: 5px;
    color: white;
  }
}

// Generate font-weight classes using @for
@for $i from 1 through 10 {
  .font#{$i} {
    font-weight: $i * 100;
  }
}

// Basketball team color classes using @each
$teams: (
  "UConn" : #004b87,
  "Duke" : #0000ff,
  "Kansas" : #e4002b,
  "Michigan State" : #18453b
);

@each $team, $color in $teams {
  .team-#{$team} {
    background-color: $color;
    color: white;
    padding: 10px;
    border-radius: 5px;
  }
}

// Season-based glyph after heading tags
$seasons: ("winter", "spring", "summer", "fall");

@mixin season-glyph($season) {
  content: url('/path-to-your-glyphs/#{$season}.png');
}

@each $season in $seasons {
  h1.#{$season}, h2.#{$season}, h3.#{$season} {
    @include season-glyph($season);
  }
}

      font-size: $font-size;
      width: $width;
      background-color: $bg-color;
      color: purple;
      padding: 0.5em 1em;
      border: none;
      border-radius: 5px;
    }
  }
  
  @include button-style(16px, 150px, lightblue, "important");
  @include button-style(14px, 120px, lightgreen, "note");
  
  /* Exercise 2: Lists and nth() */
  
  $font-sizes: 100%, 110%, 120%, 130%, 140%;
  
  @mixin heading-size($level) {
    h#{$level} {
      font-size: nth($font-sizes, $level - 5);
    }
  }
  
  @include heading-size(6);
  @include heading-size(7);
  @include heading-size(8);
  @include heading-size(9);
  @include heading-size(10);
  
  /* Exercise 3: @each with list of days */
  $days: (
    "Monday" lightblue,
    "Tuesday" lightgreen,
    "Wednesday" lavender,
    "Thursday" peachpuff,
    "Friday" lightcoral,
    "Saturday" lightyellow,
    "Sunday" lightskyblue
  );
  
  @each $day, $color in $days {
    .day-#{to-lower-case($day)} {
      background-color: $color;
      padding: 1em;
      margin: 0.5em 0;
      border-radius: 10px;
    }
  }
  
  /* Exercise 4: @for loop */
  @for $i from 1 through 10 {
    .font#{$i} {
      font-weight: $i * 100;
    }
  }
  
  /* Exercise 5: Maps */
  $teams: (
    "UConn": #002868,
    "Purdue": #CEB888,
    "Alabama": #9E1B32,
    "NC State": #CC0000
  );
  
  @each $team, $color in $teams {
    .team-#{to-lower-case(str-replace($team, " ", "-"))} {
      color: $color;
    }
  }
  
  /*Exercise 6: Season Glyphs with @each and Mixin */
  $seasons: (
    "spring" "üå∏",
    "summer" "‚òÄÔ∏è",
    "autumn" "üçÇ",
    "winter" "‚ùÑÔ∏è"
  );
  
  @mixin season-heading($season, $glyph) {
    h1.season-#{$season}::after {
      content: " #{$glyph}";
      font-size: 1.2em;
      margin-left: 0.5em;
    }
  }
  
  @each $season, $glyph in $seasons {
    @include season-heading($season, $glyph);
  }
  
